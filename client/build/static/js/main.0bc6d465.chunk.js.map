{"version":3,"sources":["components/Todos/TodoItem/TodoItem.module.css","components/UI/Header/Header.module.css","components/Login/LoginForm/LoginForm.module.css","components/Todos/AddTodo/AddTodoForm/AddTodoForm.module.css","components/Tabs/TabsList/TabsList.module.css","components/UI/MyButton/Mybutton.module.css","components/UI/Layout/Layout.module.css","components/UI/Spinner/Spinner.module.css","components/UI/Modal/ModalOverlay/ModalOverlay.module.css","components/UI/Modal/Modal.module.css","assets/images/logo-10eeb40b2eee870f7950a668ee7ccd19.png","store/thunks/authThunks.js","store/slices/authSlice.js","store/thunks/todoThunks.js","store/slices/todosSlice.js","components/UI/MyButton/MyButton.js","components/UI/Header/HeaderNav/HeaderNav.js","components/UI/Header/Header.js","components/UI/Layout/Layout.js","components/Todos/AddTodo/AddTodoForm/AddTodoForm.js","components/Todos/AddTodo/AddTodo.js","assets/images/loader.svg","components/UI/Spinner/Spinner.js","pages/NewTodo/NewTodo.js","pages/Homepage/Homepage.js","pages/NotFound/NotFound.js","components/UI/Modal/ModalOverlay/ModalOverlay.js","components/UI/Modal/Modal.js","components/Login/LoginForm/LoginForm.js","components/Login/Login.js","components/Todos/TodoItem/TodoItem.js","components/Todos/TodosList.js","components/Tabs/TabsList/TabsList.js","components/Tabs/Tabs.js","pages/MyTodos/MyTodos.js","App.js","store/index.js","index.js"],"names":["module","exports","apiKey","process","loginThunk","createAsyncThunk","data","a","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","response","json","responseData","console","log","error","id","localId","token","idToken","registerThunk","message","authDataSetter","state","payload","isAuth","authSlice","createSlice","name","initialState","isFetching","reducers","logout","clearError","extraReducers","pending","fulfilled","authActions","actions","authReducer","reducer","dbUrl","fetchTodos","userId","todos","addTodo","todo","changeTodoStatus","status","oldStatus","deleteTodo","restoreTodo","todosSlice","quantity","all","active","done","hold","deleted","statuses","label","color","isInitialFetch","setIsInitialFetch","resetQty","push","loadedTodos","key","title","description","author","find","t","todosActions","todosReducer","MyButton","text","bgColor","hoverColor","type","onClickHandler","paddingOnHover","useState","backgroundColor","style","setStyle","onClick","className","c","myButton","paddingAnimated","onMouseEnter","onMouseLeave","HeaderNav","useSelector","auth","dispatch","useDispatch","activeClassFunc","isActive","headerNavLink","authNav","to","headerNav","Header","header","headerInner","headerLogo","src","logo","alt","Layout","props","container","children","AddTodoForm","onAddTodoHandler","setTitle","setDescription","addTodoForm","onSubmit","e","preventDefault","formFields","htmlFor","value","onChange","target","descr","formControls","AddTodo","navigate","useNavigate","Spinner","portalDestination","document","getElementById","createPortal","spinnerWrapper","spinnerImg","NewTodo","Homepage","NotFound","ModalOverlay","onModalClose","currentTarget","overlay","Modal","onClose","submittable","modal","LoginForm","onFormSubmit","isLogin","onChangeIsLogin","emailValue","setEmailValue","passwordValue","setPasswordValue","form","formTitle","emailText","passText","Login","setIsLogin","onLoginSubmitHandler","prevState","TodoItem","React","memo","onRemoveTodo","onRestoreTodo","onChangeTodoStatus","statusesList","showModal","setShowModal","editStatusMode","setEditStatusMode","modalOpenHandler","currentStatusColor","s","oldStatusColor","actionBtn","restoreBtn","deleteBtn","listItem","onDoubleClick","statusBar","statusControls","map","statusBtn","changedStatus","TodosList","statusFilter","todosState","useEffect","filter","onRemoveTodoHandler","onRestoreTodoHandler","onChangeTodoStatusHandler","filteredTodos","todosList","length","todoList","TabsList","onNavButtonClickHandler","todosQuantity","tabsNav","tabsNavItem","h","Tabs","activeStatus","setActiveStatus","tabs","tabsContent","MyTodos","App","path","element","store","configureStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.0bc6d465.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"TodoItem_listItem__3_XZ7\",\"actionBtn\":\"TodoItem_actionBtn__1MTH_\",\"restoreBtn\":\"TodoItem_restoreBtn__2nas1\",\"deleteBtn\":\"TodoItem_deleteBtn__3U9ch\",\"statusControls\":\"TodoItem_statusControls__3t3ZL\",\"statusBar\":\"TodoItem_statusBar__sbQXK\",\"statusBtn\":\"TodoItem_statusBtn__1ozMH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2yNJT\",\"headerInner\":\"Header_headerInner__YALtI\",\"headerLogo\":\"Header_headerLogo__2fVPG\",\"headerNav\":\"Header_headerNav__SGwTc\",\"headerNavLink\":\"Header_headerNavLink__2UAXS\",\"active\":\"Header_active__3gjc7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__2ACN0\",\"formFields\":\"LoginForm_formFields__2r7Tl\",\"formControls\":\"LoginForm_formControls__wWSXz\",\"loginBtn\":\"LoginForm_loginBtn__35OGQ\",\"isLoginBtn\":\"LoginForm_isLoginBtn__Kq1WC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addTodoForm\":\"AddTodoForm_addTodoForm__2-uiG\",\"formFields\":\"AddTodoForm_formFields__2Lidb\",\"formControls\":\"AddTodoForm_formControls__ZJjty\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabsNav\":\"TabsList_tabsNav__2pJw-\",\"tabsNavItem\":\"TabsList_tabsNavItem__1-LzC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myButton\":\"Mybutton_myButton__2KdZR\",\"paddingAnimated\":\"Mybutton_paddingAnimated__vyGCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__21X9G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"Spinner_spinnerWrapper__306Uh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"ModalOverlay_overlay__26zQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__4k40M\"};","export default __webpack_public_path__ + \"static/media/logo-10eeb40b2eee870f7950a668ee7ccd19.7f4d3f89.png\";","import {createAsyncThunk} from \"@reduxjs/toolkit\";\r\n\r\nconst apiKey = process.env.REACT_APP_FIREBASE_WEB_API_KEY\r\n\r\nexport const loginThunk = createAsyncThunk(\r\n    'auth/Login',\r\n    async (data) => {\r\n        const response = await fetch(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: data.email,\r\n                password: data.password,\r\n                returnSecureToken: true\r\n            }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        const responseData = await response.json()\r\n        console.log(responseData)\r\n        if (!responseData.error) {\r\n            return {\r\n                id: responseData.localId,\r\n                email: responseData.email,\r\n                token: responseData.idToken\r\n            }\r\n        } else {\r\n            return responseData\r\n        }\r\n    }\r\n)\r\n\r\nexport const registerThunk = createAsyncThunk(\r\n    'auth/Register',\r\n    async (data) => {\r\n        try {\r\n            const response = await fetch(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: data.email,\r\n                    password: data.password,\r\n                    returnSecureToken: true\r\n                }),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n            const responseData = await response.json()\r\n            console.log(responseData)\r\n            if (!responseData.error) {\r\n                return {\r\n                    id: responseData.localId,\r\n                    email: responseData.email,\r\n                    token: responseData.token\r\n                }\r\n            } else {\r\n                return responseData\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n)\r\n","import {createSlice} from \"@reduxjs/toolkit\";\r\nimport {loginThunk, registerThunk} from \"../thunks/authThunks\";\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    email: null,\r\n    token: null,\r\n    id: null,\r\n    error: null,\r\n    isFetching: false\r\n}\r\n\r\nconst authDataSetter = (state, payload) => {\r\n    if (!payload.error) {\r\n        state.email = payload.email\r\n        state.token = payload.token\r\n        state.id = payload.id\r\n        state.isAuth = true\r\n    } else {\r\n        state.error = payload.error.message\r\n    }\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        logout(state) {\r\n            state.email = null\r\n            state.token = null\r\n            state.id = null\r\n            state.isAuth = false\r\n        },\r\n        clearError(state) {\r\n            state.error = null\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [loginThunk.pending]: (state) => {\r\n            state.isFetching = true\r\n        },\r\n        [loginThunk.fulfilled]: (state, {payload}) => {\r\n            authDataSetter(state, payload)\r\n            state.isFetching = false\r\n        },\r\n        [registerThunk.pending]: (state) => {\r\n            state.isFetching = true\r\n        },\r\n        [registerThunk.fulfilled]: (state, {payload}) => {\r\n            authDataSetter(state, payload)\r\n            state.isFetching = false\r\n        }\r\n    }\r\n})\r\n\r\nexport const authActions = authSlice.actions\r\n\r\nconst authReducer = authSlice.reducer\r\n\r\nexport default authReducer\r\n","import {createAsyncThunk} from \"@reduxjs/toolkit\";\r\n\r\nconst dbUrl = process.env.REACT_APP_FIREBASE_DATABASE_URL\r\n\r\n\r\nexport const fetchTodos = createAsyncThunk(\r\n    'todos/fetchTodos',\r\n    async (userId) => {\r\n        try {\r\n            const response = await fetch(`${dbUrl}/todos.json`)\r\n            const data = await response.json()\r\n            return {todos: data, userId}\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n)\r\n\r\nexport const addTodo = createAsyncThunk(\r\n    'todos/addTodo',\r\n    async ({todo}) => {\r\n        try {\r\n            const response = await fetch(`${dbUrl}/todos.json`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(todo),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            const responseData = await response.json()\r\n            return {\r\n                id: responseData.name,\r\n                ...todo\r\n            }\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n\r\n    }\r\n)\r\n\r\nexport const changeTodoStatus = createAsyncThunk(\r\n    'todos/changeStatus',\r\n    async ({id, status, oldStatus}) => {\r\n        try {\r\n            await fetch(`${dbUrl}/todos/${id}.json`, {\r\n                method: 'PATCH',\r\n                body: JSON.stringify({\r\n                    oldStatus: oldStatus,\r\n                    status: status\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            return {id, status}\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n)\r\n\r\nexport const deleteTodo = createAsyncThunk(\r\n    'todos/deleteTodo',\r\n    async ({id, status}) => {\r\n        try {\r\n            await fetch(`${dbUrl}/todos/${id}.json`, {\r\n                method: 'PATCH',\r\n                body: JSON.stringify({\r\n                    oldStatus: status,\r\n                    status: 'deleted',\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            return {id}\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n)\r\n\r\nexport const restoreTodo = createAsyncThunk(\r\n    'todos/restoreTodo',\r\n    async ({id, oldStatus}) => {\r\n        try {\r\n            await fetch(`${dbUrl}/todos/${id}.json`, {\r\n                method: 'PATCH',\r\n                body: JSON.stringify({\r\n                    status: oldStatus,\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            return {id, oldStatus}\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n)\r\n\r\n\r\n\r\n\r\n","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nimport {addTodo, changeTodoStatus, deleteTodo, fetchTodos, restoreTodo} from \"../thunks/todoThunks\";\r\n\r\nconst initialState = {\r\n    todos: [],\r\n    quantity: {\r\n        all: 0,\r\n        active: 0,\r\n        done: 0,\r\n        hold: 0,\r\n        deleted: 0\r\n    },\r\n    statuses: [\r\n        {\r\n            id: 'active',\r\n            label: 'Active',\r\n            color: 'green'\r\n        },\r\n        {\r\n            id: 'done',\r\n            label: 'Done',\r\n            color: 'blue'\r\n        },\r\n        {\r\n            id: 'hold',\r\n            label: 'Hold',\r\n            color: 'grey'\r\n        },\r\n        {\r\n            id: 'deleted',\r\n            label: 'Deleted',\r\n            color: 'red'\r\n        }\r\n    ],\r\n    isFetching: false,\r\n    isInitialFetch: true\r\n}\r\n\r\n\r\nconst todosSlice = createSlice({\r\n    name: 'todos',\r\n    initialState,\r\n    reducers: {\r\n        // onChangeStatus(state, {payload}) {\r\n        //     const [oldStatus, status] = payload\r\n        //     console.log(oldStatus, status)\r\n        //     state.quantity[`${oldStatus}`]--\r\n        //     state.quantity[`${status}`]++\r\n        // }\r\n        setIsInitialFetch(state, {payload}) {\r\n            state.isInitialFetch = payload\r\n        },\r\n        resetQty(state) {\r\n            state.quantity = {\r\n                all: 0,\r\n                active: 0,\r\n                done: 0,\r\n                hold: 0,\r\n                deleted: 0\r\n            }\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [addTodo.pending]: (state) => {\r\n            state.isFetching = true\r\n        },\r\n        [addTodo.fulfilled]: (state, {payload}) => {\r\n            state.todos.push(payload)\r\n            state.quantity['all'] += 1\r\n            state.quantity['active'] += 1\r\n            state.isFetching = false\r\n        },\r\n        [fetchTodos.pending]: (state) => {\r\n            state.isFetching = true\r\n        },\r\n        [fetchTodos.fulfilled]: (state, {payload}) => {\r\n            const loadedTodos = []\r\n            const todos = payload.todos\r\n            for (const key in todos) {\r\n                if (payload)\r\n                    loadedTodos.push({\r\n                        id: key,\r\n                        title: todos[key].title,\r\n                        description: todos[key].description,\r\n                        status: todos[key].status,\r\n                        oldStatus: todos[key].oldStatus,\r\n                        author: todos[key].author\r\n                    })\r\n                if (state.isInitialFetch && payload.userId === todos[key].author) {\r\n                    state.quantity[todos[key].status]++\r\n                    state.quantity['all'] = todos[key].status !==\r\n                    'deleted' ? state.quantity['all'] + 1 :\r\n                        state.quantity['all']\r\n                }\r\n            }\r\n            state.todos = loadedTodos\r\n            state.isFetching = false\r\n            state.isInitialFetch = false\r\n        },\r\n        [changeTodoStatus.pending]: (state) => {\r\n            state.isFetching = true\r\n        },\r\n        [changeTodoStatus.fulfilled]: (state, {payload}) => {\r\n            const todo = state.todos.find(t => t.id === payload.id)\r\n            todo.oldStatus = todo.status\r\n            todo.status = payload.status\r\n            state.quantity[todo.oldStatus] -= 1\r\n            state.quantity[payload.status] += 1\r\n            state.isFetching = false\r\n        },\r\n        [deleteTodo.pending]: (state) => {\r\n            state.isFetching = true\r\n        },\r\n        [deleteTodo.fulfilled]: (state, {payload}) => {\r\n            const todo = state.todos.find(t => t.id === payload.id)\r\n            todo.oldStatus = todo.status\r\n            todo.status = 'deleted'\r\n            state.quantity[todo.oldStatus] -= 1\r\n            state.quantity['deleted'] += 1\r\n            state.quantity['all'] -= 1\r\n            state.isFetching = false\r\n        },\r\n        [restoreTodo.pending]: (state) => {\r\n            state.isFetching = true\r\n        },\r\n        [restoreTodo.fulfilled]: (state, {payload}) => {\r\n            const todo = state.todos.find(t => t.id === payload.id)\r\n            todo.status = todo.oldStatus\r\n            state.quantity[todo.status] += 1\r\n            state.quantity['deleted'] -= 1\r\n            state.quantity['all'] += 1\r\n            state.isFetching = false\r\n        }\r\n    }\r\n})\r\n\r\nexport const todosActions = todosSlice.actions\r\n\r\nconst todosReducer = todosSlice.reducer\r\n\r\nexport default todosReducer\r\n","import React, {useState} from 'react';\r\n\r\nimport c from './Mybutton.module.css'\r\n\r\nconst MyButton = ({text, bgColor, color, hoverColor, type, onClickHandler, paddingOnHover}) => {\r\n    const [style, setStyle] = useState({\r\n        color,\r\n        backgroundColor: bgColor,\r\n    })\r\n\r\n    const colorOnHoverHandler = () => {\r\n        setStyle({\r\n            color,\r\n            backgroundColor: hoverColor\r\n        })\r\n    }\r\n\r\n    const colorOnUnhoverHAndler = () => {\r\n        setStyle({\r\n            color,\r\n            backgroundColor: bgColor\r\n        })\r\n    }\r\n\r\n    return (\r\n        <button\r\n            onClick={onClickHandler ? onClickHandler : null}\r\n            className={`${c.myButton} ${paddingOnHover ? c.paddingAnimated : ''}`}\r\n            onMouseEnter={colorOnHoverHandler}\r\n            onMouseLeave={colorOnUnhoverHAndler}\r\n            type={type ? type : 'button'}\r\n            style={style}\r\n        >\r\n            {text}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default MyButton;\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {authActions} from \"../../../../store/slices/authSlice\";\r\nimport {todosActions} from \"../../../../store/slices/todosSlice\";\r\nimport c from \"../Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport MyButton from \"../../MyButton/MyButton\";\r\n\r\nconst HeaderNav = () => {\r\n    const isAuth = useSelector(state => state.auth.isAuth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onLogoutHandler = () => {\r\n        dispatch(authActions.logout())\r\n        dispatch(todosActions.setIsInitialFetch(true))\r\n        dispatch(todosActions.resetQty())\r\n    }\r\n\r\n    const activeClassFunc = ({isActive}) => `${c.headerNavLink} ${isActive ? c.active : \"\"}`\r\n\r\n    const authNav = isAuth ?\r\n        <>\r\n            <NavLink className={activeClassFunc} to=\"/my-account\">My Account</NavLink>\r\n            <MyButton\r\n                onClickHandler={onLogoutHandler}\r\n                color=\"#ffffff\"\r\n                bgColor=\"red\"\r\n                hoverColor=\"#000000\"\r\n                text=\"Logout\"\r\n            >\r\n                Logout\r\n            </MyButton>\r\n        </> :\r\n        <NavLink className={activeClassFunc} to=\"/login\">Login</NavLink>\r\n\r\n    return (\r\n        <nav className={c.headerNav}>\r\n            {\r\n                isAuth && <>\r\n                    <NavLink className={activeClassFunc} to=\"/\">Home</NavLink>\r\n                    <NavLink className={activeClassFunc} to=\"/my-todos\">View my todos</NavLink>\r\n                    <NavLink className={activeClassFunc} to=\"/add-new\">Add new todo</NavLink></>\r\n            }\r\n            {authNav}\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default HeaderNav;\r\n","import React from 'react';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport logo from \"../../../assets/images/logo-10eeb40b2eee870f7950a668ee7ccd19.png\"\r\n\r\nimport c from './Header.module.css'\r\nimport HeaderNav from \"./HeaderNav/HeaderNav\";\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <div className={c.header}>\r\n            <div className={c.headerInner}>\r\n                <div className={c.headerLogo}>\r\n                    <Link to=\"/\">\r\n                        <img src={logo} alt=\"main logo\"/>\r\n                    </Link>\r\n                </div>\r\n                <HeaderNav />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport c from './Layout.module.css'\r\nimport Header from \"../Header/Header\";\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className={c.container}>\r\n                {props.children}\r\n            </div>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import React, {useState} from 'react';\r\n\r\nimport c from './AddTodoForm.module.css'\r\nimport MyButton from \"../../../UI/MyButton/MyButton\";\r\n\r\nconst AddTodoForm = ({onAddTodoHandler}) => {\r\n    const [title, setTitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n\r\n    const onTitleChangeHandler = (e) => {\r\n        const text = e.target.value\r\n        setTitle(text)\r\n    }\r\n\r\n    const onDescriptionChangeHandler = (e) => {\r\n        const descr = e.target.value\r\n        console.log(descr)\r\n        setDescription(descr)\r\n    }\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        onAddTodoHandler({\r\n            title,\r\n            description\r\n        })\r\n        setTitle('')\r\n        setDescription('')\r\n    }\r\n\r\n\r\n    return (\r\n        <form className={c.addTodoForm} onSubmit={onSubmitHandler}>\r\n            <div className={c.formFields}>\r\n                <label htmlFor=\"title\">Enter the title</label>\r\n                <input name=\"title\" value={title} onChange={onTitleChangeHandler} type=\"text\"/>\r\n                <label htmlFor=\"description\">Describe the Todo</label>\r\n                <textarea name=\"description\" value={description} onChange={onDescriptionChangeHandler} type=\"text\"/>\r\n            </div>\r\n            <div className={c.formControls}>\r\n                <MyButton type=\"submit\" text=\"Add Todo\" color=\"#ffffff\" hoverColor=\"#000000\" bgColor=\"#6fdd8f\" paddingOnHover/>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddTodoForm;\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {addTodo} from \"../../../store/thunks/todoThunks\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport AddTodoForm from \"./AddTodoForm/AddTodoForm\";\r\n\r\nconst AddTodo = () => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const userId = useSelector(state => state.auth.id)\r\n\r\n    const onAddTodoHandler = (todo) => {\r\n        dispatch(addTodo(\r\n            {\r\n                todo: {\r\n                    ...todo,\r\n                    status: 'active',\r\n                    oldStatus: 'active',\r\n                    author: userId\r\n                }\r\n            }))\r\n        navigate('/my-todos')\r\n    }\r\n\r\n    return (\r\n        <AddTodoForm onAddTodoHandler={onAddTodoHandler}/>\r\n    );\r\n};\r\n\r\nexport default AddTodo;\r\n","export default __webpack_public_path__ + \"static/media/loader.8a029caf.svg\";","import React from 'react';\r\nimport spinnerImg from '../../../assets/images/loader.svg'\r\n\r\nimport c from './Spinner.module.css'\r\nimport {createPortal} from \"react-dom\";\r\n\r\nconst Spinner = () => {\r\n    const portalDestination = document.getElementById('spinner-root')\r\n\r\n    return (\r\n        createPortal(<div className={c.spinnerWrapper}>\r\n            <img src={spinnerImg} alt=\"\"/>\r\n        </div>, portalDestination)\r\n\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport AddTodo from \"../../components/Todos/AddTodo/AddTodo\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nconst NewTodo = () => {\r\n    const isFetching = useSelector(state => state.todos.isFetching)\r\n\r\n    return (\r\n        <>\r\n            {isFetching && <Spinner />}\r\n            <AddTodo />\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default NewTodo;\r\n","import React from 'react';\r\n\r\nconst Homepage = () => {\r\n    return (\r\n        <div>\r\n            <h1>Homepage</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Homepage;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <h1>\r\n            The page was not found=(\r\n        </h1>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\n\r\nimport c from './ModalOverlay.module.css'\r\n\r\nconst ModalOverlay = ({children, onModalClose}) => {\r\n    const closeModalHandler = (e) => {\r\n        if (e.target === e.currentTarget) {\r\n            onModalClose()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div onClick={closeModalHandler} className={c.overlay}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalOverlay;\r\n","import React from 'react';\r\nimport ModalOverlay from \"./ModalOverlay/ModalOverlay\";\r\n\r\nimport c from './Modal.module.css'\r\nimport {createPortal} from \"react-dom\";\r\n\r\nconst Modal = ({message, onClose, onSubmit, submittable}) => {\r\n    const portalDestination = document.getElementById('modal-root')\r\n\r\n\r\n    return (\r\n        createPortal(<ModalOverlay onModalClose={onClose}>\r\n            <div className={c.modal}>\r\n                <p>{message}</p>\r\n                {!submittable && <button onClick={onClose}>close</button>}\r\n                {submittable &&\r\n                    <>\r\n                        <button onClick={onSubmit}>Submit</button>\r\n                        <button onClick={onClose}>Cancel</button>\r\n                    </>\r\n                }\r\n            </div>\r\n        </ModalOverlay>, portalDestination)\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React, {useState} from 'react';\r\n\r\nimport c from './LoginForm.module.css'\r\nimport MyButton from \"../../UI/MyButton/MyButton\";\r\n\r\nconst LoginForm = ({\r\n                       onFormSubmit,\r\n                       isLogin,\r\n                       onChangeIsLogin\r\n                   }) => {\r\n\r\n    const [emailValue, setEmailValue] = useState('')\r\n    const [passwordValue, setPasswordValue] = useState('')\r\n\r\n\r\n    const onChangeEmailValueHandler = (e) => {\r\n        const emailText = e.target.value\r\n        setEmailValue(emailText)\r\n    }\r\n\r\n    const onChangePasswordValueHandler = (e) => {\r\n        const passText = e.target.value\r\n        setPasswordValue(passText)\r\n    }\r\n\r\n    const sendDataOnSubmitHAndler = (e) => {\r\n        e.preventDefault()\r\n        onFormSubmit({\r\n            email: emailValue,\r\n            password: passwordValue\r\n        })\r\n    }\r\n\r\n    return (\r\n        <form className={c.form} onSubmit={sendDataOnSubmitHAndler}>\r\n            <h3 className={c.formTitle}>{isLogin ? \"Login\" : \"Sign Up\"}</h3>\r\n            <div className={c.formFields}>\r\n                <label htmlFor=\"email\">\r\n                    Your Email\r\n                </label>\r\n                <input type=\"email\" value={emailValue} onChange={onChangeEmailValueHandler}/>\r\n                <label htmlFor=\"password\">\r\n                    Your Password\r\n                </label>\r\n                <input type=\"password\" value={passwordValue} onChange={onChangePasswordValueHandler}/>\r\n            </div>\r\n            <div className={c.formControls}>\r\n                <MyButton\r\n                    color=\"#ffffff\"\r\n                    bgColor=\"#82b1ff\"\r\n                    hoverColor=\"#000000\"\r\n                    text={isLogin ? \"Login\" : \"Register\"}\r\n                    paddingOnHover\r\n                    type=\"submit\"/>\r\n                <p>or</p>\r\n                <MyButton\r\n                    onClickHandler={onChangeIsLogin}\r\n                    color=\"#ffffff\"\r\n                    bgColor=\"#6fdd8f\"\r\n                    hoverColor=\"#000000\"\r\n                    paddingOnHover\r\n                    text={isLogin ? \"Create new account\" : \"Login with existing account\"}/>\r\n\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {authActions} from \"../../store/slices/authSlice\";\r\nimport {loginThunk, registerThunk} from \"../../store/thunks/authThunks\";\r\nimport Modal from \"../UI/Modal/Modal\";\r\nimport LoginForm from \"./LoginForm/LoginForm\";\r\n\r\nconst Login = () => {\r\n        const [isLogin, setIsLogin] = useState(true)\r\n\r\n        const error = useSelector(state => state.auth.error)\r\n\r\n        const dispatch = useDispatch()\r\n        const navigate = useNavigate()\r\n\r\n\r\n        const onChangeIsLogin = () => {\r\n            setIsLogin(prevState => !prevState)\r\n        }\r\n\r\n        const onLoginSubmitHandler = async (data) => {\r\n            isLogin ? await dispatch(loginThunk(data)) : await dispatch(registerThunk(data))\r\n            error ? console.log(error) : navigate('/')\r\n        }\r\n\r\n        const onCloseModal = () => {\r\n            dispatch(authActions.clearError())\r\n        }\r\n\r\n\r\n        return (\r\n            <>\r\n                {error && <Modal onClose={onCloseModal} message={error}/>}\r\n                <LoginForm\r\n                    onFormSubmit={onLoginSubmitHandler}\r\n                    isLogin={isLogin}\r\n                    onChangeIsLogin={onChangeIsLogin}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n;\r\n\r\nexport default Login;\r\n","import React, {useState} from 'react';\r\nimport Modal from \"../../UI/Modal/Modal\";\r\n\r\nimport c from './TodoItem.module.css'\r\n\r\nconst TodoItem = React.memo(({\r\n                                 id,\r\n                                 title,\r\n                                 description,\r\n                                 author,\r\n                                 deleted,\r\n                                 status,\r\n                                 oldStatus,\r\n                                 onRemoveTodo,\r\n                                 onRestoreTodo,\r\n                                 onChangeTodoStatus,\r\n                                 statusesList\r\n                             }) => {\r\n\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [editStatusMode, setEditStatusMode] = useState(false)\r\n\r\n    const onDoubleClickHandler = () => {\r\n        setEditStatusMode(true)\r\n    }\r\n\r\n    const changeTodoStatus = (changedStatus) => {\r\n        if (changedStatus !== status) {\r\n            onChangeTodoStatus({\r\n                id,\r\n                title,\r\n                status: changedStatus,\r\n                oldStatus\r\n            })\r\n        }\r\n        setEditStatusMode(false)\r\n    }\r\n\r\n    const modalOpenHandler = () => {\r\n        setShowModal(true)\r\n    }\r\n\r\n    const modalCloseHandler = () => {\r\n        setShowModal(false)\r\n    }\r\n\r\n    const currentStatusColor = statusesList.find(s => s.id === status).color\r\n    const oldStatusColor = statusesList.find(s => s.id === oldStatus).color\r\n\r\n    const actionBtn = !deleted ?\r\n        <button className={`${c.actionBtn} ${c.deleteBtn}`} onClick={modalOpenHandler}>delete</button> :\r\n        <button className={`${c.actionBtn} ${c.restoreBtn}`} onClick={modalOpenHandler}>restore</button>\r\n\r\n    return (\r\n        <>\r\n            {showModal && <Modal\r\n                message={`Are you sure you want to ${!deleted ? 'delete' : 'restore'} this todo???`}\r\n                submittable\r\n                onSubmit={!deleted ? () => onRemoveTodo(id, status) : () => onRestoreTodo(id, oldStatus)}\r\n                onClose={modalCloseHandler}\r\n            />}\r\n            <li className={c.listItem}>\r\n                <h3>{title}</h3>\r\n                <p>{description}</p>\r\n                <div onDoubleClick={!deleted ? onDoubleClickHandler : null}>\r\n                    {!editStatusMode && !deleted &&\r\n                    <span className={c.statusBar} style={{backgroundColor: currentStatusColor}}>\r\n                    {status}\r\n                </span>}\r\n                    {/*//Status section on deleted items*/}\r\n                    {!editStatusMode && deleted &&\r\n                    <>\r\n                        <span>was on </span>\r\n                        <span className={c.statusBar} style={{backgroundColor: oldStatusColor}}>\r\n                {oldStatus}\r\n                    </span>\r\n                        <span> status before removal</span>\r\n                    </>}\r\n                    {editStatusMode &&\r\n                    <div className={c.statusControls}>\r\n                        {statusesList.map(s => {\r\n                            if (s.id === 'deleted') {\r\n                                return null\r\n                            }\r\n                            return <button\r\n                                className={c.statusBtn}\r\n                                style={{backgroundColor: s.color}}\r\n                                onClick={() => changeTodoStatus(s.id)}\r\n                                key={s.id}\r\n                            >\r\n                                {s.id}\r\n                            </button>\r\n                        })}\r\n                    </div>\r\n                    }\r\n                </div>\r\n                {actionBtn}\r\n            </li>\r\n        </>\r\n    )\r\n        ;\r\n});\r\n\r\nexport default TodoItem;\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport TodoItem from \"./TodoItem/TodoItem\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {changeTodoStatus, deleteTodo, fetchTodos, restoreTodo} from \"../../store/thunks/todoThunks\";\r\n\r\nimport s from './TodosList.module.css'\r\n\r\n\r\nconst TodosList = ({statusFilter}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const todosState = useSelector(state => state.todos)\r\n    const userId = useSelector(state => state.auth.id)\r\n\r\n\r\n    useEffect(() => {\r\n        if (todosState.isInitialFetch) {\r\n            dispatch(fetchTodos(userId))\r\n        }\r\n    }, [dispatch])\r\n\r\n    let todos\r\n\r\n    if (statusFilter !== 'all' && statusFilter !== 'deleted') {\r\n        todos = todosState.todos.filter(t => t.status === statusFilter)\r\n    }\r\n\r\n    if (statusFilter === 'all') {\r\n        todos = todosState.todos.filter(t => t.status !== 'deleted')\r\n    }\r\n\r\n    if (statusFilter === 'deleted') {\r\n        todos = todosState.todos.filter(t => t.status === 'deleted')\r\n    }\r\n\r\n    const statusesList = todosState.statuses\r\n\r\n    const onRemoveTodoHandler = (id, status) => {\r\n        dispatch(deleteTodo({id, status}))\r\n    }\r\n\r\n    const onRestoreTodoHandler = (id, oldStatus) => {\r\n        dispatch(restoreTodo({id, oldStatus}))\r\n    }\r\n\r\n    const onChangeTodoStatusHandler = ({id, status, oldStatus}) => {\r\n        dispatch(changeTodoStatus({\r\n            id,\r\n            status,\r\n            oldStatus\r\n        }))\r\n    }\r\n\r\n    const filteredTodos = todos.filter(t => t.author === userId)\r\n\r\n    const todosList = filteredTodos.length > 0 ? filteredTodos.map(t => <TodoItem\r\n            key={t.id}\r\n            id={t.id}\r\n            deleted={statusFilter === 'deleted'}\r\n            status={t.status}\r\n            oldStatus={t.oldStatus}\r\n            title={t.title}\r\n            author={t.author}\r\n            description={t.description}\r\n            onRemoveTodo={onRemoveTodoHandler}\r\n            onRestoreTodo={onRestoreTodoHandler}\r\n            onChangeTodoStatus={onChangeTodoStatusHandler}\r\n            statusesList={statusesList}\r\n        />) :\r\n        <p>No <span>{statusFilter !== 'all' ? statusFilter : ''}</span> Todos yet, try <Link\r\n            to=\"/add-new\">adding</Link> one</p>\r\n\r\n\r\n    return (\r\n        <>\r\n            <ul className={s.todoList}>\r\n                {todosList}\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TodosList;\r\n","import React from 'react';\r\n\r\nimport c from './TabsList.module.css'\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst TabsList = ({onNavButtonClickHandler}) => {\r\n    const statusesList = useSelector(state => state.todos.statuses)\r\n    const todosQuantity = useSelector(state => state.todos.quantity)\r\n\r\n    return (\r\n        <ul className={c.tabsNav}>\r\n            <li className={c.tabsNavItem} onClick={() => onNavButtonClickHandler('all')}>All{`(${todosQuantity.all})`}</li>\r\n            {statusesList.map(h => <li\r\n                    className={c.tabsNavItem}\r\n                    key={h.id}\r\n                    onClick={() => onNavButtonClickHandler(h.id)}\r\n                >\r\n                    {h.label}{`(${todosQuantity[h.id]})`}\r\n                </li>\r\n            )}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TabsList;\r\n","import React, {useState} from 'react';\r\n\r\nimport c from './Tabs.module.css'\r\nimport TodosList from \"../Todos/TodosList\";\r\nimport TabsList from \"./TabsList/TabsList\";\r\n\r\nconst Tabs = () => {\r\n    const [activeStatus, setActiveStatus] = useState('all')\r\n\r\n    const onNavButtonClickHandler = (status) => {\r\n        setActiveStatus(status)\r\n    }\r\n\r\n    return (\r\n        <div className={c.tabs}>\r\n            <TabsList onNavButtonClickHandler={onNavButtonClickHandler}/>\r\n            <div className={c.tabsContent}>\r\n                <TodosList statusFilter={activeStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tabs;\r\n","import React from 'react';\r\nimport Tabs from \"../../components/Tabs/Tabs\";\r\n\r\nimport {useSelector} from \"react-redux\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nconst MyTodos = () => {\r\n    const isFetching = useSelector(state => state.todos.isFetching)\r\n\r\n    return (\r\n        <>\r\n            {isFetching && <Spinner />}\r\n            <Tabs />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MyTodos;\r\n","import React from \"react\";\r\n\r\nimport Layout from \"./components/UI/Layout/Layout\";\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport NewTodo from \"./pages/NewTodo/NewTodo\";\r\nimport Homepage from \"./pages/Homepage/Homepage\";\r\nimport NotFound from \"./pages/NotFound/NotFound\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Login from \"./components/Login/Login\";\r\nimport MyTodos from \"./pages/MyTodos/MyTodos\";\r\n\r\nfunction App() {\r\n    const isAuth = useSelector(state => state.auth.isAuth)\r\n\r\n    return (\r\n        <Layout>\r\n            <Routes>\r\n                    <Route path=\"/\" element={isAuth ? <Homepage/> : <Navigate to=\"/login\"/>}/>\r\n                    <Route path=\"/login\" element={!isAuth ? <Login/> : <Homepage/>}/>\r\n                    <Route path=\"/add-new\" element={isAuth ? <NewTodo/> : <Navigate to=\"/login\"/>}/>\r\n                    <Route path=\"/my-todos\" element={isAuth ? <MyTodos/> : <Navigate to=\"/login\"/>}/>\r\n                    <Route path=\"*\" element={isAuth ? <NotFound/> : <Navigate to=\"/login\"/>}/>\r\n            </Routes>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {configureStore} from '@reduxjs/toolkit'\r\nimport todosReducer from \"./slices/todosSlice\";\r\nimport authReducer from \"./slices/authSlice\";\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: authReducer,\r\n        todos: todosReducer\r\n    }\r\n})\r\n\r\nexport default store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux'\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n"],"sourceRoot":""}